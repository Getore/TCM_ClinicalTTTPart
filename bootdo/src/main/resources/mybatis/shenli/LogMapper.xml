<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.shenli.dao.LogDao">

	<select id="get" resultType="com.bootdo.shenli.domain.LogDO">
		select `projectName`,`done`,`remarks`,`writeTime` from staff_log where projectName = #{value}
	</select>

	<select id="list" resultType="com.bootdo.shenli.domain.LogDO">
		select `projectName`,`done`,`remarks`,`writeTime` from staff_log
        <where>  
		  		  <if test="projectname != null and projectname != ''"> and projectName = #{projectname} </if>
		  		  <if test="done != null and done != ''"> and done = #{done} </if>
		  		  <if test="remarks != null and remarks != ''"> and remarks = #{remarks} </if>
		  		  <if test="writetime != null and writetime != ''"> and writeTime = #{writetime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by projectName desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from staff_log
		 <where>  
		  		  <if test="projectname != null and projectname != ''"> and projectName = #{projectname} </if>
		  		  <if test="done != null and done != ''"> and done = #{done} </if>
		  		  <if test="remarks != null and remarks != ''"> and remarks = #{remarks} </if>
		  		  <if test="writetime != null and writetime != ''"> and writeTime = #{writetime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.shenli.domain.LogDO">
		insert into staff_log
		(
			`projectName`, 
			`done`, 
			`remarks`, 
			`writeTime`
		)
		values
		(
			#{projectname}, 
			#{done}, 
			#{remarks}, 
			#{writetime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.shenli.domain.LogDO">
		update staff_log 
		<set>
			<if test="done != null">`done` = #{done}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="writetime != null">`writeTime` = #{writetime}</if>
		</set>
		where projectName = #{projectname}
	</update>
	
	<delete id="remove">
		delete from staff_log where projectName = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from staff_log where projectName in 
		<foreach item="projectname" collection="array" open="(" separator="," close=")">
			#{projectname}
		</foreach>
	</delete>

</mapper>